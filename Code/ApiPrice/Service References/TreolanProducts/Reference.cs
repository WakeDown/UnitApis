//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.34209
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ApiPrice.TreolanProducts {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="https://b2b.treolan.ru/Webservice2008/", ConfigurationName="TreolanProducts.B2BWebServiceSoap")]
    public interface B2BWebServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="https://b2b.treolan.ru/Webservice2008/ProductInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode ProductInfo(string Login, string password, string Articul);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://b2b.treolan.ru/Webservice2008/ProductInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> ProductInfoAsync(string Login, string password, string Articul);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://b2b.treolan.ru/Webservice2008/ProductInfoV2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode ProductInfoV2(string Login, string password, string Articul);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://b2b.treolan.ru/Webservice2008/ProductInfoV2", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> ProductInfoV2Async(string Login, string password, string Articul);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://b2b.treolan.ru/Webservice2008/GetCargoList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetCargoList(string Login, string password, string DateBeg, string DateEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://b2b.treolan.ru/Webservice2008/GetCargoList", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetCargoListAsync(string Login, string password, string DateBeg, string DateEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://b2b.treolan.ru/Webservice2008/GetCargoByNumb", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetCargoByNumb(string Login, string password, long CargoNumb);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://b2b.treolan.ru/Webservice2008/GetCargoByNumb", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetCargoByNumbAsync(string Login, string password, long CargoNumb);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://b2b.treolan.ru/Webservice2008/GetSchet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetSchet(string Login, string password, string SchetName);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://b2b.treolan.ru/Webservice2008/GetSchet", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetSchetAsync(string Login, string password, string SchetName);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://b2b.treolan.ru/Webservice2008/DeleteSchetPosition", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode DeleteSchetPosition(string Login, string password, string XMLQuery);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://b2b.treolan.ru/Webservice2008/DeleteSchetPosition", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> DeleteSchetPositionAsync(string Login, string password, string XMLQuery);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://b2b.treolan.ru/Webservice2008/MoveSchet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode MoveSchet(string Login, string password, string XMLQuery);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://b2b.treolan.ru/Webservice2008/MoveSchet", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> MoveSchetAsync(string Login, string password, string XMLQuery);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface B2BWebServiceSoapChannel : ApiPrice.TreolanProducts.B2BWebServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class B2BWebServiceSoapClient : System.ServiceModel.ClientBase<ApiPrice.TreolanProducts.B2BWebServiceSoap>, ApiPrice.TreolanProducts.B2BWebServiceSoap {
        
        public B2BWebServiceSoapClient() {
        }
        
        public B2BWebServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public B2BWebServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public B2BWebServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public B2BWebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Xml.XmlNode ProductInfo(string Login, string password, string Articul) {
            return base.Channel.ProductInfo(Login, password, Articul);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> ProductInfoAsync(string Login, string password, string Articul) {
            return base.Channel.ProductInfoAsync(Login, password, Articul);
        }
        
        public System.Xml.XmlNode ProductInfoV2(string Login, string password, string Articul) {
            return base.Channel.ProductInfoV2(Login, password, Articul);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> ProductInfoV2Async(string Login, string password, string Articul) {
            return base.Channel.ProductInfoV2Async(Login, password, Articul);
        }
        
        public System.Xml.XmlNode GetCargoList(string Login, string password, string DateBeg, string DateEnd) {
            return base.Channel.GetCargoList(Login, password, DateBeg, DateEnd);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetCargoListAsync(string Login, string password, string DateBeg, string DateEnd) {
            return base.Channel.GetCargoListAsync(Login, password, DateBeg, DateEnd);
        }
        
        public System.Xml.XmlNode GetCargoByNumb(string Login, string password, long CargoNumb) {
            return base.Channel.GetCargoByNumb(Login, password, CargoNumb);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetCargoByNumbAsync(string Login, string password, long CargoNumb) {
            return base.Channel.GetCargoByNumbAsync(Login, password, CargoNumb);
        }
        
        public System.Xml.XmlNode GetSchet(string Login, string password, string SchetName) {
            return base.Channel.GetSchet(Login, password, SchetName);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetSchetAsync(string Login, string password, string SchetName) {
            return base.Channel.GetSchetAsync(Login, password, SchetName);
        }
        
        public System.Xml.XmlNode DeleteSchetPosition(string Login, string password, string XMLQuery) {
            return base.Channel.DeleteSchetPosition(Login, password, XMLQuery);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> DeleteSchetPositionAsync(string Login, string password, string XMLQuery) {
            return base.Channel.DeleteSchetPositionAsync(Login, password, XMLQuery);
        }
        
        public System.Xml.XmlNode MoveSchet(string Login, string password, string XMLQuery) {
            return base.Channel.MoveSchet(Login, password, XMLQuery);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> MoveSchetAsync(string Login, string password, string XMLQuery) {
            return base.Channel.MoveSchetAsync(Login, password, XMLQuery);
        }
    }
}
